[{"authors":["admin"],"categories":null,"content":"Brian Ssali is an analyst at Livinggoods Uganda. His interests include data science and machine learning.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://brianstefans.com/author/brian-ssali/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/brian-ssali/","section":"authors","summary":"Brian Ssali is an analyst at Livinggoods Uganda. His interests include data science and machine learning.","tags":null,"title":"Brian Ssali","type":"authors"},{"authors":[],"categories":["R","GIS"],"content":"\r\rWe are going to be looking at the water sources in Africa. The data used is from one of the Tidy Tuesdayhere datasets and it can be retrieved from here.\rWe are going to to utilize ggmap, ggplot and leaflet to create spatial maps and use also use the tidyverse packages for data cleaning.\n## Reading layer `africa_shapefile\u0026#39; from data source `C:\\Users\\Brian Stephen Ssali\\OneDrive\\Scripts\\Others\\Portifolio\\brianstefans.github.io\\content\\post\\2021-06-09-water-sources-in-africa\\Data\\africa_shapefile.shp\u0026#39; using driver `ESRI Shapefile\u0026#39;\r## Simple feature collection with 55 features and 11 fields\r## geometry type: MULTIPOLYGON\r## dimension: XY\r## bbox: xmin: -17.53017 ymin: -46.98138 xmax: 51.41551 ymax: 37.56095\r## geographic CRS: WGS 84\rWater sources across Africa\n## \u0026lt;ggproto object: Class FacetWrap, Facet, gg\u0026gt;\r## compute_layout: function\r## draw_back: function\r## draw_front: function\r## draw_labels: function\r## draw_panels: function\r## finish_data: function\r## init_scales: function\r## map_data: function\r## params: list\r## setup_data: function\r## setup_params: function\r## shrink: TRUE\r## train_scales: function\r## vars: function\r## super: \u0026lt;ggproto object: Class FacetWrap, Facet, gg\u0026gt;\r","date":1623196800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1623258683,"objectID":"dda4850d797205fa07c339def27397ec","permalink":"https://brianstefans.com/post/water-sources-in-africa/","publishdate":"2021-06-09T00:00:00Z","relpermalink":"/post/water-sources-in-africa/","section":"post","summary":"We are going to be looking at the water sources in Africa. The data used is from one of the Tidy Tuesdayhere datasets and it can be retrieved from here.","tags":["Tidytuesday"],"title":"Water Sources in Africa","type":"post"},{"authors":[],"categories":[],"content":"\r\rWe are going to look analyzing likert scaled dataset. This is going to be split into a 2 parts with the first one looking at the Exploratory data analysis and the other at the variable association and regression. The data can be retrieved from here.\nThe data is focused on the 5 key attributes of one’s big 5 personalities that is ; Openness,Neuroticism, Agreeableness,Extraversion, Conscientiousness\nExploring the dataset\rWe shall now do some exploration of the variables within the dataset to be able to understand it better.\rFirst we look at the demographics to understand the distribution and origins of the respondents. We shall be using the skim function from the skimr package and the summary function for a quick EDA.\n\rTable 1: Data summary\r\rName\rPiped data\r\rNumber of rows\r19852\r\rNumber of columns\r8\r\r_______________________\r\r\rColumn type frequency:\r\r\rfactor\r7\r\rnumeric\r1\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: factor\n\r\rskim_variable\rn_missing\rcomplete_rate\rordered\rn_unique\rtop_counts\r\r\r\rrace\r0\r1\rFALSE\r14\rCau: 10641, Oth: 2555, Sou: 1871, Cau: 1521\r\renglish_native_language\r0\r1\rFALSE\r3\rYes: 12391, No: 7391, mis: 70\r\rgender\r0\r1\rFALSE\r4\rFem: 12055, Mal: 7671, Oth: 102, mis: 24\r\rhand_for_usage\r0\r1\rFALSE\r4\rRig: 17541, Lef: 1737, Bot: 474, mis: 100\r\rsource\r0\r1\rFALSE\r5\rAno: 12182, Goo: 3690, Oth: 3538, Fac: 305\r\rcountry\r69\r1\rFALSE\r143\rUni: 8753, Gab: 1531, Ind: 1464, Aus: 994\r\rregion\r69\r1\rFALSE\r5\rAme: 10791, Asi: 3487, Eur: 3016, Afr: 2288\r\r\r\rVariable type: numeric\n\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\rage\r9\r1\r26.29\r11.57\r13\r18\r22\r31\r118\r▇▂▁▁▁\r\r\r\r## race ## Caucasian (European) :10516 ## Other : 2513 ## South East Asian (Chinese, Thai, Malay, Filipino, etc): 1842 ## Caucasian (Indian) : 1496 ## Mixed Race : 1429 ## Caucasian (Middle East) : 513 ## (Other) : 1277 ## age english_native_language gender hand_for_usage\r## Min. : 13.00 No : 7283 Female:11932 Both : 466 ## 1st Qu.: 18.00 Yes:12303 Male : 7557 Left : 1729 ## Median : 22.00 Other : 97 Right:17391 ## Mean : 26.25 ## 3rd Qu.: 31.00 ## Max. :118.00 ## ## source country ## Another page on the test website:12018 United States of America:8665 ## edu related url : 137 Gabon :1507 ## Facebook : 302 India :1456 ## Google : 3643 Austria : 982 ## Other source : 3486 Canada : 913 ## Philippines : 642 ## (Other) :5421 ## region ## Africa : 2259 ## Americas:10686 ## Asia : 3455 ## Europe : 2989 ## Oceania : 197 ## ## \rThere are some columns with missing values. For these specific values we shall do away with them. We also observe that that majority of the respondents are Caucasians from Europe. A bigger percentage of the respondents are females and majority use the right hand for usage. Also more responses were received from the american region.\nWe now focus on the 5 attributes starting with Extraversion. We are going to be using the\n\r","date":1616025600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1616077415,"objectID":"dac2b84bd89aa131607962ad39372de9","permalink":"https://brianstefans.com/post/analysing-likert-scaled-data/","publishdate":"2021-03-18T00:00:00Z","relpermalink":"/post/analysing-likert-scaled-data/","section":"post","summary":"We are going to look analyzing likert scaled dataset. This is going to be split into a 2 parts with the first one looking at the Exploratory data analysis and the other at the variable association and regression.","tags":["regression"],"title":"Analysing Likert Scaled Data","type":"post"},{"authors":[],"categories":[],"content":"\r\rWe are going to look a dataset from the Tidytuesday on the passwords. The dataset entails the actual text of the password,the category of the password,time taken to crack the password(both online and offline) and the strength of the password.\nExploring the dataset\rWe use the skimr package to have a quick overview of the data with all the data types.\nlibrary(skimr)\rskimr::skim(passwords)\r\r(#tab:overview_of_dataset )Data summary\r\rName\rpasswords\r\rNumber of rows\r507\r\rNumber of columns\r9\r\r_______________________\r\r\rColumn type frequency:\r\r\rcharacter\r3\r\rnumeric\r6\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: character\n\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rempty\rn_unique\rwhitespace\r\r\r\rpassword\r7\r0.99\r4\r9\r0\r500\r0\r\rcategory\r7\r0.99\r4\r19\r0\r10\r0\r\rtime_unit\r7\r0.99\r4\r7\r0\r7\r0\r\r\r\rVariable type: numeric\n\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\rrank\r7\r0.99\r250.50\r144.48\r1.00\r125.75\r250.50\r375.25\r500.00\r▇▇▇▇▇\r\rvalue\r7\r0.99\r5.60\r8.44\r1.29\r3.43\r3.72\r3.72\r92.27\r▇▁▁▁▁\r\roffline_crack_sec\r7\r0.99\r0.50\r2.66\r0.00\r0.00\r0.00\r0.08\r29.27\r▇▁▁▁▁\r\rrank_alt\r7\r0.99\r251.22\r145.05\r1.00\r125.75\r251.50\r376.25\r502.00\r▇▇▇▇▇\r\rstrength\r7\r0.99\r7.43\r5.42\r0.00\r6.00\r7.00\r8.00\r48.00\r▇▁▁▁▁\r\rfont_size\r7\r0.99\r10.30\r3.65\r0.00\r10.00\r11.00\r11.00\r28.00\r▁▇▁▁▁\r\r\r\rThere are some rows with NAs that we are going to remove.It would be interesting to see the how long the passwords take to be cracked based on their corresponding categories and their strength as well\n\rplot1 \u0026lt;- passwords %\u0026gt;%\rfilter(!is.na(category)) %\u0026gt;%\rmutate(time_unit = factor(time_unit, levels = c(\u0026quot;seconds\u0026quot;, \u0026quot;minutes\u0026quot;, \u0026quot;hours\u0026quot;, \u0026quot;days\u0026quot;, \u0026quot;weeks\u0026quot;, \u0026quot;months\u0026quot;, \u0026quot;years\u0026quot;))) %\u0026gt;%\rggplot(aes(category, value, fill = time_unit)) +\rgeom_point(aes(colour = time_unit), size = 2.5) +\rcoord_polar(clip = \u0026quot;on\u0026quot;) +\rtheme_dark() +\rtheme(legend.position = \u0026quot;bottom\u0026quot;, axis.text = element_text(colour = \u0026quot;black\u0026quot;), panel.grid.major = element_line(\u0026quot;gray\u0026quot;)) +\rscale_colour_manual(values = c(\u0026quot;#FFDB6D\u0026quot;, \u0026quot;#C4961A\u0026quot;, \u0026quot;#F4EDCA\u0026quot;, \u0026quot;#D16103\u0026quot;, \u0026quot;#00AFBB\u0026quot;, \u0026quot;#4E84C4\u0026quot;, \u0026quot;#FC4E07\u0026quot;), guide = guide_legend(nrow = 1))\rplot1\rpasswords %\u0026gt;%\rfilter(!is.na(category)) %\u0026gt;%\rgroup_by(category) %\u0026gt;%\rtransmute(strength = mean(strength, na.rm = T)) %\u0026gt;%\rtidyr::pivot_longer(cols = c(strength)) %\u0026gt;%\rarrange(value) %\u0026gt;%\rdistinct(.) %\u0026gt;%\rggplot(aes(value, reorder(category, value), fill = name)) +\rgeom_segment(aes(xend = 0, yend = category)) +\rgeom_point(size = 4, aes(color = category), show.legend = F) +\rgeom_text(aes(label = round(value, 1)), hjust = -.5) +\rtheme_minimal() +\rlabs(x = \u0026quot;Strenght of Password\u0026quot;, y = \u0026quot;Category of Password\u0026quot;)\r\rpasswords %\u0026gt;%\rfilter(!is.na(password)) %\u0026gt;%\rmutate(\rnum_digits = str_count(password, \u0026quot;\\\\d\u0026quot;), num_char = str_count(password, \u0026quot;\\\\D\u0026quot;), no_digits_char = str_count(password, \u0026quot;[^\\\\d] | [^\\\\D]\u0026quot;),\rtype_of_pwd = case_when(num_digits == 0 \u0026amp; num_char \u0026gt; 0 ~ \u0026quot;Character only\u0026quot;, num_digits \u0026gt; 0 \u0026amp; num_char == 0 ~ \u0026quot;Numeric only\u0026quot;, num_digits \u0026gt; 0 \u0026amp; num_char \u0026gt; 0 ~ \u0026quot;Both Character \u0026amp; Numeric\u0026quot;)\r) %\u0026gt;%\rcount(category, type_of_pwd, name = \u0026quot;Freq\u0026quot;) %\u0026gt;%\rggplot(aes(Freq, category, fill = type_of_pwd)) +\rgeom_col(width = .5, position = \u0026quot;dodge\u0026quot;) +\rtheme_minimal() +\rtheme(legend.position = \u0026quot;bottom\u0026quot;) +\rlabs(x = \u0026quot;Category of Password\u0026quot;, y = \u0026quot;Frequecy\u0026quot;) +\rscale_fill_manual(values = c(\u0026quot;#00AFBB\u0026quot;, \u0026quot;#4E84C4\u0026quot;, \u0026quot;#FC4E07\u0026quot;))\rLooks like majority of the passwords consist of only character values. Some of the password-related and sport related passwords have both the numeric and characters.The nerdy-pop passwords have the least number of passwords with numeric and simple-alphanumeric have the highest number of passwords with only numeric and also with both the numeric and characters.\npasswords %\u0026gt;%\rfilter(!is.na(password)) %\u0026gt;%\rmutate(\rnum_digits = str_count(password, \u0026quot;\\\\d\u0026quot;), num_char = str_count(password, \u0026quot;\\\\D\u0026quot;), no_digits_char = str_count(password, \u0026quot;[^\\\\d] | [^\\\\D]\u0026quot;),\rtype_of_pwd = case_when(num_digits == 0 \u0026amp; num_char \u0026gt; 0 ~ \u0026quot;Character only\u0026quot;, num_digits \u0026gt; 0 \u0026amp; num_char == 0 ~ \u0026quot;Numeric only\u0026quot;, num_digits \u0026gt; 0 \u0026amp; num_char \u0026gt; 0 ~ \u0026quot;Both Character \u0026amp; Numeric\u0026quot;),\rlabz = case_when(value \u0026gt; 75 ~ password, TRUE ~ \u0026quot;\u0026quot;)\r) %\u0026gt;%\rgroup_by(type_of_pwd, time_unit) %\u0026gt;%\rsummarise(value = mean(value, na.rm = T)) %\u0026gt;%\rmutate(time_unit = factor(time_unit, levels = c(\u0026quot;seconds\u0026quot;, \u0026quot;minutes\u0026quot;, \u0026quot;hours\u0026quot;, \u0026quot;days\u0026quot;, \u0026quot;weeks\u0026quot;, \u0026quot;months\u0026quot;, \u0026quot;years\u0026quot;))) %\u0026gt;%\rggplot(aes(type_of_pwd, value, fill = time_unit)) +\rgeom_col(position = \u0026quot;dodge\u0026quot;) +\rtheme_minimal() +\rtheme(legend.position = \u0026quot;bottom\u0026quot;) +\rlabs(y = \u0026quot;Duration taken to crack password\u0026quot;, x = NULL) +\rscale_fill_brewer(palette = \u0026quot;Set1\u0026quot;, guide = guide_legend(nrow = 1)) +\rscale_y_continuous(expand = c(0, 0), limits = c(0, 60))\rBased on the data, its better to have a password that’s alpha numeric as it has a higher password strength and would take longer to crack as compared to passwords that are only consisting of numeric or only characters.\n\r","date":1598054400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598128028,"objectID":"56c91f2287a8e1777a166ab36ccf6053","permalink":"https://brianstefans.com/post/tidytuesday-cracking-passwords/","publishdate":"2020-08-22T00:00:00Z","relpermalink":"/post/tidytuesday-cracking-passwords/","section":"post","summary":"We are going to look a dataset from the Tidytuesday on the passwords. The dataset entails the actual text of the password,the category of the password,time taken to crack the password(both online and offline) and the strength of the password.","tags":["R","Tidytuesday"],"title":"#Tidytuesday Cracking Passwords","type":"post"},{"authors":null,"categories":null,"content":"This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:\n You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday\u0026rsquo;s Markdown and Pandoc\u0026rsquo;s Markdown. For example, you can write a task list with Blackfriday but not with Pandoc:\n Write an R package. Write a book. \u0026hellip; Profit!  Similarly, Blackfriday does not support LaTeX math and Pandoc does. I have added the MathJax support to this theme (\rhugo-lithium) but there is a caveat for plain Markdown posts: you have to include math expressions in a pair of backticks (inline: `$ $`; display style: `$$ $$`), e.g., $S_n = \\sum_{i=1}^n X_i$.^[This is because we have to protect the math expressions from being interpreted as Markdown. You may not need the backticks if your math expression does not contain any special Markdown syntax such as underscores or asterisks, but it is always a safer choice to use backticks. When you happen to have a pair of literal dollar signs inside the same element, you can escape one dollar sign, e.g., \\$50 and $100 renders \u0026ldquo;$50 and $100\u0026rdquo;.] For R Markdown posts, you do not need the backticks, because Pandoc can identify and process math expressions.\nWhen creating a new post, you have to decide whether the post format is Markdown or R Markdown, and this can be done via the ext argument of the function blogdown::new_post(), e.g.\nblogdown::new_post(\u0026quot;Post Title\u0026quot;, ext = '.Rmd')  ","date":1483159797,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483159797,"objectID":"dac6359e86d39f18210d4aea00ef9fa8","permalink":"https://brianstefans.com/post/2016-12-30-hello-markdown/","publishdate":"2016-12-30T21:49:57-07:00","relpermalink":"/post/2016-12-30-hello-markdown/","section":"post","summary":"This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:\n You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.","tags":null,"title":"A Plain Markdown Post","type":"post"},{"authors":null,"categories":["R"],"content":"\r\rR Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00\rfit \u0026lt;- lm(dist ~ speed, data = cars)\rfit %\u0026gt;% head()\r## $coefficients\r## (Intercept) speed ## -17.579095 3.932409 ## ## $residuals\r## 1 2 3 4 5 6 7 ## 3.849460 11.849460 -5.947766 12.052234 2.119825 -7.812584 -3.744993 ## 8 9 10 11 12 13 14 ## 4.255007 12.255007 -8.677401 2.322599 -15.609810 -9.609810 -5.609810 ## 15 16 17 18 19 20 21 ## -1.609810 -7.542219 0.457781 0.457781 12.457781 -11.474628 -1.474628 ## 22 23 24 25 26 27 28 ## 22.525372 42.525372 -21.407036 -15.407036 12.592964 -13.339445 -5.339445 ## 29 30 31 32 33 34 35 ## -17.271854 -9.271854 0.728146 -11.204263 2.795737 22.795737 30.795737 ## 36 37 38 39 40 41 42 ## -21.136672 -11.136672 10.863328 -29.069080 -13.069080 -9.069080 -5.069080 ## 43 44 45 46 47 48 49 ## 2.930920 -2.933898 -18.866307 -6.798715 15.201285 16.201285 43.201285 ## 50 ## 4.268876 ## ## $effects\r## (Intercept) speed ## -303.9144946 145.5522550 -8.1154395 9.8845605 0.1941147 -9.4963311 ## ## -5.1867770 2.8132230 10.8132230 -9.8772228 1.1227772 -16.5676686 ## ## -10.5676686 -6.5676686 -2.5676686 -8.2581144 -0.2581144 -0.2581144 ## ## 11.7418856 -11.9485602 -1.9485602 22.0514398 42.0514398 -21.6390061 ## ## -15.6390061 12.3609939 -13.3294519 -5.3294519 -17.0198977 -9.0198977 ## ## 0.9801023 -10.7103435 3.2896565 23.2896565 31.2896565 -20.4007893 ## ## -10.4007893 11.5992107 -28.0912352 -12.0912352 -8.0912352 -4.0912352 ## ## 3.9087648 -1.4721268 -17.1625726 -4.8530184 17.1469816 18.1469816 ## ## 45.1469816 6.4565358 ## ## $rank\r## [1] 2\r## ## $fitted.values\r## 1 2 3 4 5 6 7 8 ## -1.849460 -1.849460 9.947766 9.947766 13.880175 17.812584 21.744993 21.744993 ## 9 10 11 12 13 14 15 16 ## 21.744993 25.677401 25.677401 29.609810 29.609810 29.609810 29.609810 33.542219 ## 17 18 19 20 21 22 23 24 ## 33.542219 33.542219 33.542219 37.474628 37.474628 37.474628 37.474628 41.407036 ## 25 26 27 28 29 30 31 32 ## 41.407036 41.407036 45.339445 45.339445 49.271854 49.271854 49.271854 53.204263 ## 33 34 35 36 37 38 39 40 ## 53.204263 53.204263 53.204263 57.136672 57.136672 57.136672 61.069080 61.069080 ## 41 42 43 44 45 46 47 48 ## 61.069080 61.069080 61.069080 68.933898 72.866307 76.798715 76.798715 76.798715 ## 49 50 ## 76.798715 80.731124 ## ## $assign\r## [1] 0 1\r\rIncluding Plots\rYou can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1))\rpie(\rc(280, 60, 20),\rc(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;),\rcol = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;),\rinit.angle = -50, border = NA\r)\r\rFigure 1: A fancy pie chart.\r\r\r","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"https://brianstefans.com/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://brianstefans.com/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/about/","section":"","summary":"","tags":null,"title":"About","type":"widget_page"}]